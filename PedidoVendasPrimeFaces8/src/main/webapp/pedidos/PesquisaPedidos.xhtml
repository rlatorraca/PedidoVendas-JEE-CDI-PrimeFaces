<ui:composition template="/WEB-INF/template/LayoutPadrao.xhtml"
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:p="http://primefaces.org/ui">

    <ui:define name="titulo">#{cadastroPedidoBean.editando ? "Edição de pedido" : "Pesquisa de pedido"}</ui:define>
    
    <ui:define name="corpo">
    	<h:form>
	    	<h1>#{cadastroPedidoBean.editando ? "Edição de pedido" : "Pesquisa de pedido"}</h1>
	    	
	    	<!-- ToolBar -->
	    	<p:toolbar style="margin-top: 20px">
	    	
	    		<p:toolbarGroup>
	    			<p:commandButton value="Pesquisar" action="#{pesquisaPedidosBean.pesquisar}" update="@form"/>
	    		</p:toolbarGroup>
	    	
	    		<p:toolbarGroup align="right">
	    			<p:button value="Novo" outcome="/pedidos/CadastroPedido"/>
	    		</p:toolbarGroup>
	    	</p:toolbar>
	    	
	    	<!-- Panel Grid -->
	    	<p:panelGrid columns="2" id="painel" style="width: 100%; margin-top: 20px" columnClasses="rotulo, campo">
	    	
	    		<p:outputLabel value="Número" />
	    		
	    		<h:panelGroup>
	    			<p:inputText size="10" value="#{pesquisaPedidosBean.filtro.numeroDe}"/>
	    			a
	    			<p:inputText size="10" value="#{pesquisaPedidosBean.filtro.numeroAte}" />
	    		</h:panelGroup>	    		
	    	
	    		<p:outputLabel value="Data de criação" />
	    		
	    		<h:panelGroup>
	    			<p:calendar size="10" pattern="dd/MM/yyyy" value="#{pesquisaPedidosBean.filtro.dataCriacaoDe}"/>
	    			a
	    			<p:calendar size="10" pattern="dd/MM/yyyy" value="#{pesquisaPedidosBean.filtro.dataCriacaoAte}"/>
	    		</h:panelGroup>
	    		
	    		<p:outputLabel value="Vendedor" />
	    		<p:inputText size="40" value="#{pesquisaPedidosBean.filtro.nomeVendedor}" />
	    		
	    		<p:outputLabel value="Cliente" />
	    		<p:inputText size="40" value="#{pesquisaPedidosBean.filtro.nomeCliente}"/>
	    		
	    		<p:outputLabel value="Status" />
	    		<p:selectManyCheckbox value="#{pesquisaPedidosBean.filtro.statuses}">
	    			<f:selectItems value="#{pesquisaPedidosBean.statuses}" var="status"
	    				itemValue="#{status}" itemLabel="#{status.descricao}" />
	    		</p:selectManyCheckbox>
	    	</p:panelGrid>
	    	
	    	<p:dataTable id="pedidosTable" value="#{pesquisaPedidosBean.pedidosFiltrados}" var="pedido"
	    		style="margin-top: 20px" emptyMessage="Nenhum pedido encontrado."
	    		rows="10" paginator="true" paginatorAlwaysVisible="false" paginatorPosition="bottom">
	    		<p:column headerText="Número" style="text-align: center; width: 100px">
	    			<h:outputText value="#{pedido.id}" />
	    		</p:column>
	    		<p:column headerText="Cliente">
	    			<h:outputText value="#{pedido.cliente.nome}"/>
	    		</p:column>
	    		<p:column headerText="Vendedor">
	    			<h:outputText value="#{pedido.vendedor.nome}"/>
	    		</p:column>
	    		<p:column headerText="Data de criação" style="text-align: center; width: 140px">
	    			<h:outputText value="#{pedido.dataCriacao}">
	    				<f:convertDateTime pattern="dd/MM/yyyy" />
	    			</h:outputText>
	    		</p:column>
	    		<p:column headerText="Valor total" style="text-align: center; width: 120px">
	    			<h:outputText value="#{pedido.valorTotal}" style="text-align: right;" >
	    				<f:convertNumber type="currency"/>
	    			</h:outputText>
	    		</p:column>
	    		<p:column headerText="Status"  style="text-align: center; width: 100px">
	    			<h:outputText value="#{pedido.status.descricao}"/>
	    		</p:column>
	    		<p:column headerText="Ações" style="text-align: center; width: 50px">  
		    		<p:button icon="ui-icon-pencil" title="Editar" outcome="/pedidos/CadastroPedido">
		    				<f:param name="pedido" value="#{pedido.id}" />
		    		</p:button>		
	    			<!-- usa-se button pois LEVARA o usuario para OUTRA PAGINA, usa o "outcome"-->
	    			<!-- apenas executa um acao e NAO REMETE a outra pagina, apenas executa um ACAO, usa "actionListener" -->
	    			<!-- O outcome funciona como um link. Se você quer só direcionar o usuário para uma página, pode usar isso.Geralmente a gente usa action para executar 
	    			      um método no managed bean que pode direcionar o usuário para outra view dependendo do resultado (ou pode permanecer na mesma página).
						  ActionListener é usado mais para quando você quer executar alguma coisa antes do action, por exemplo, você poderia usar para registrar o log de 
						  alguma coisa, verificar se o usuário tem permissão, etc. -->
						  
	    		</p:column> 
	    	</p:dataTable>
	    	
    	</h:form>
    </ui:define>
</ui:composition>